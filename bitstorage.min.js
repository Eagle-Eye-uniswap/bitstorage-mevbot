/* 
 * Javascript localstorage API
 * Created by Eric van Eldik | http://www.bitstroom.com
 */
function bitstorage(t){this.table=t,this.data=null,localStorage.getItem(t)||this.clear(),this.loadFromLocal(),this.autoIncrement=this.data.length}bitstorage.prototype.clear=function(){this.data=[],this.saveToLocal()},bitstorage.prototype.clean=function(){var t=[];for(key in this.data)t.push(this.data[key]);this.data=t,this.saveToLocal()},bitstorage.prototype.saveToLocal=function(){localStorage.setItem(this.table,JSON.stringify(this.data)),this.autoIncrement=this.data.length},bitstorage.prototype.loadFromLocal=function(){this.data=JSON.parse(localStorage.getItem(this.table))},bitstorage.prototype.getSizeInKb=function(){return(2*localStorage[this.table].length/1024).toFixed(2)},bitstorage.prototype.getAll=function(){return this.data},bitstorage.prototype.get=function(t){return this.data[t]},bitstorage.prototype.find=function(t){for(var a=[],e=0;e<this.data.length;e++)if(this.data[e])if("string"==typeof this.data[e])this.data[e]==t&&(a.push(e),e++);else for(key in this.data[e])this.data[e][key]==t&&(a.push(e),e++);return a},bitstorage.prototype.findLike=function(t){var a=[],e="";t=t.toLowerCase();for(var o=0;o<this.data.length;o++)if(this.data[o])if("string"==typeof this.data[o])e=this.data[o].toLowerCase(),-1!=e.indexOf(t)&&(a.push(o),o++);else for(key in this.data[o])this.data[o][key]&&"string"==typeof this.data[o][key]&&(e=this.data[o][key].toLowerCase(),-1!=e.indexOf(t)&&(a.push(o),o++));return a},bitstorage.prototype.findByKey=function(t,a){var e=[];"string"==typeof t&&(t=[t]);for(var o=0;o<this.data.length;o++)for(var i=0;i<t.length;i++){var s=t[i];this.data[o]&&this.data[o][s]&&this.data[o][s]==a&&(e.push(o),o++)}return e},bitstorage.prototype.findByKeyLike=function(t,a){var e=[],o="";"string"==typeof t&&(t=[t]),a=a.toLowerCase();for(var i=0;i<this.data.length;i++)for(var s=0;s<t.length;s++){var r=t[s];this.data[i]&&this.data[i][r]&&"string"==typeof this.data[i][r]&&(o=this.data[i][r].toLowerCase(),-1!=o.indexOf(a)&&(e.push(i),i++))}return e},bitstorage.prototype.insert=function(t){var a=this.autoIncrement;return this.data[a]=t,this.saveToLocal(),a},bitstorage.prototype.update=function(t,a){return this.data[t]=a,this.saveToLocal(),t},bitstorage.prototype["delete"]=function(t){delete this.data[t],this.saveToLocal()};